# -*- coding: utf-8 -*-
# @Time    : 2021/9/1 9:23
# @Author  : ZhaoXiangPeng
# @File    : _ssl.py
# 绕过 JA3 指纹反爬机制
# 重写 ssl 指纹

import random
import ssl

# ssl._create_default_https_context = ssl._create_unverified_context
# ORIGIN_CIPHERS = ('ECDHE-ECDSA-AES256-GCM-SHA384:HIGH:!MEDIUM:!LOW:!aNULL:!eNULL:!DES:!MD5:!PSK:!kRSA:!SRP:!3DES:!DSS:!EXP:!CAMELLIA:@STRENGTH')
ORIGIN_CIPHERS = ':'.join(['ECDHE-ECDSA-AES256-GCM-SHA384', 'SHA384+ECDSA', 'SHA512+ECDSA', 'SHA256+ECDSA', 'Unknown+SM2', 'RSA+AESGCM', 'Unknown+Unknown', 'SHA256+RSA', 'SHA384+RSA', 'SHA512+RSA', 'SHA1+ECDSA', 'SHA1+RSA'])
# '771,4866-4867-4865-49196-49200-159-52393-52392-52394-49195-49199-158-49188-49192-107-49187-49191-103-49162-49172-57-49161-49171-51-157-156-61-60-53-47-255,0-11-10-35-22-23-13-43-45-51-21,29-23-1035-25-24,0-1-2'
# '771,19018-4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,31354-0-23-65281-10-11-35-16-5-13-18-51-45-43-27-17513-39578-21,27242-29-23-24,0'
# '771,4866-4867-4865-53-132-47-150-65-7-49187-49266-49162-49161-61-192-60-186-49188-49267-255,0-11-10-35-22-23-13-43-45-51-21,29-23-1035-25-24,0-1-2'
# '771,4866-4867-4865-49187-49266-49162-49161-61-192-60-186-49188-49267-53-132-47-150-65-7-255,0-11-10-35-22-23-13-43-45-51-21,29-23-1035-25-24,0-1-2'
# '771,4866-4867-4865-49196-49187-49266-49188-49267-157-156-61-192-60-186-49162-49161-53-132-47-150-65-7-255,0-11-10-35-22-23-13-43-45-51-21,29-23-1035-25-24,0-1-2'
# '771,4866-4867-4865-49196-49187-49266-49188-49267-157-156-61-192-60-186-49162-49161-53-132-47-150-65-7-255,0-11-10-35-22-23-13-43-45-51-21,29-23-1035-25-24,0-1-2'
# '771,19018-4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,43690-0-23-65281-10-11-35-16-5-13-18-51-45-43-27-17513-47802-21,51914-29-23-24,0'
# '771,4865-4867-4866-49195-49199-52393-52392-49196-49200-49162-49161-49171-49172-156-157-47-53,0-23-65281-10-11-35-16-5-34-51-43-13-45-28,29-23-24-25-256-257,0'

# ORIGIN_CIPHERS = ('ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+HIGH:'
#                   'DH+HIGH:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+HIGH:RSA+3DES')


class SSLFactory:
    def __init__(self):
        self.ciphers = ORIGIN_CIPHERS.split(":")

    def __call__(self) -> ssl.SSLContext:
        random.shuffle(self.ciphers)
        ciphers = ":".join(self.ciphers)
        ciphers = ciphers + ":!aNULL:!eNULL:!MD5"

        context = ssl.create_default_context()
        context.set_ciphers(ciphers)
        return context
